// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ava-labs/avalanchego/vms/secp256k1fx (interfaces: AliasGetter)
//
// Generated by this command:
//
//	mockgen -package=secp256k1fx -destination=vms/secp256k1fx/mock_alias_getter.go github.com/ava-labs/avalanchego/vms/secp256k1fx AliasGetter
//

// Package secp256k1fx is a generated GoMock package.
package secp256k1fx

import (
	reflect "reflect"

	ids "github.com/ava-labs/avalanchego/ids"
	multisig "github.com/ava-labs/avalanchego/vms/components/multisig"
	gomock "go.uber.org/mock/gomock"
)

// MockAliasGetter is a mock of AliasGetter interface.
type MockAliasGetter struct {
	ctrl     *gomock.Controller
	recorder *MockAliasGetterMockRecorder
}

// MockAliasGetterMockRecorder is the mock recorder for MockAliasGetter.
type MockAliasGetterMockRecorder struct {
	mock *MockAliasGetter
}

// NewMockAliasGetter creates a new mock instance.
func NewMockAliasGetter(ctrl *gomock.Controller) *MockAliasGetter {
	mock := &MockAliasGetter{ctrl: ctrl}
	mock.recorder = &MockAliasGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAliasGetter) EXPECT() *MockAliasGetterMockRecorder {
	return m.recorder
}

// GetMultisigAlias mocks base method.
func (m *MockAliasGetter) GetMultisigAlias(arg0 ids.ShortID) (*multisig.AliasWithNonce, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMultisigAlias", arg0)
	ret0, _ := ret[0].(*multisig.AliasWithNonce)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMultisigAlias indicates an expected call of GetMultisigAlias.
func (mr *MockAliasGetterMockRecorder) GetMultisigAlias(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMultisigAlias", reflect.TypeOf((*MockAliasGetter)(nil).GetMultisigAlias), arg0)
}
